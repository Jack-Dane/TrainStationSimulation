// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrainStationSimulator.DAL;

namespace TrainStationSimulator.Migrations
{
    [DbContext(typeof(TrainStationContext))]
    partial class TrainStationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("TrainStationSimulator.Models.Route", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("RouteName")
                        .HasColumnType("TEXT");

                    b.HasKey("RouteId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("TrainStationSimulator.Models.RouteStation", b =>
                {
                    b.Property<int>("RouteStationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ArrivalDateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("CurrentStationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NextRouteStationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RouteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Sequence")
                        .HasColumnType("INTEGER");

                    b.HasKey("RouteStationId");

                    b.HasIndex("CurrentStationId");

                    b.HasIndex("NextRouteStationId");

                    b.HasIndex("RouteId");

                    b.ToTable("RouteStations");
                });

            modelBuilder.Entity("TrainStationSimulator.Models.Station", b =>
                {
                    b.Property<int>("StationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("StationName")
                        .HasColumnType("TEXT");

                    b.HasKey("StationId");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("TrainStationSimulator.Models.RouteStation", b =>
                {
                    b.HasOne("TrainStationSimulator.Models.Station", "CurrentStation")
                        .WithMany("RouteStations")
                        .HasForeignKey("CurrentStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrainStationSimulator.Models.RouteStation", "NextRouteStation")
                        .WithMany()
                        .HasForeignKey("NextRouteStationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrainStationSimulator.Models.Route", "Route")
                        .WithMany("RouteStations")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentStation");

                    b.Navigation("NextRouteStation");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("TrainStationSimulator.Models.Route", b =>
                {
                    b.Navigation("RouteStations");
                });

            modelBuilder.Entity("TrainStationSimulator.Models.Station", b =>
                {
                    b.Navigation("RouteStations");
                });
#pragma warning restore 612, 618
        }
    }
}
